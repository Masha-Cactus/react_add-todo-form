{"version":3,"sources":["api/users.ts","services/user.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","getUserById","userId","usersFromServer","find","user","getTodoId","todos","Math","max","map","todo","UserInfo","className","href","TodoInfo","title","completed","cn","TodoList","initialTodos","App","useState","setTodos","setTitle","hasNoTitleError","setHasNoTitleError","setUserId","hasNoUserIdError","setHasNoUserIdError","action","method","onSubmit","event","hasNoError","preventDefault","currentTodos","type","value","pattern","placeholder","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f50fc307.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\nimport { Todo } from '../types/Todo';\n\nexport function getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId);\n}\n\nexport function getTodoId(todos: Todo[]) {\n  const maxId = Math.max(...todos.map(todo => todo.id));\n\n  return maxId + 1;\n}\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      key={id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","// #region imports\nimport { useState } from 'react';\nimport './App.scss';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { getTodoId, getUserById } from './services/user';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n// #endregion\n\nconst initialTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(initialTodos);\n\n  const [title, setTitle] = useState('');\n  const [hasNoTitleError, setHasNoTitleError] = useState(true);\n\n  const [userId, setUserId] = useState(0);\n  const [hasNoUserIdError, setHasNoUserIdError] = useState(true);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasNoTitleError(true);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasNoUserIdError(true);\n  };\n\n  const addTodo = (event: React.FormEvent) => {\n    const hasNoError = !!title && !!userId;\n\n    event.preventDefault();\n    setHasNoTitleError(!!title);\n    setHasNoUserIdError(!!userId);\n\n    if (hasNoError) {\n      setTodos((currentTodos) => [...currentTodos, {\n        id: getTodoId(currentTodos),\n        title,\n        completed: false,\n        userId,\n        user: getUserById(userId),\n      }]);\n\n      setTitle('');\n      setUserId(0);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={addTodo}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            value={title}\n            data-cy=\"titleInput\"\n            pattern=\"^[a-zA-Z0-9\\sА-Яа-яіІєЄїЇґҐ  ]*$\"\n            placeholder=\"Please enter a title\"\n            onChange={handleTitleChange}\n          />\n          {!hasNoTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUserIdChange}\n          >\n            <option value=\"0\" disabled>\n              Choose a user\n            </option>\n            {usersFromServer.map(user => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {!hasNoUserIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}